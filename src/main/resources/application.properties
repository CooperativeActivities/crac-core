# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# ===============================
# = STANDARD DB
# ===============================

# Connection with standard DB
spring.datasource.url = jdbc:mysql://localhost/crac_db
spring.datasource.driverClassName = com.mysql.jdbc.Driver

# Username and password
spring.datasource.username = root
spring.datasource.password =

spring.jpa.properties.hibernate.ddl-auto = validate
#spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Show or not log for each sql query
spring.jpa.show-sql = false

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# ===============================
# = KOMET DB
# ===============================

# Connection url for the komet-db
komet.datasource.url = jdbc:mysql://localhost/db_komet-crac-at
komet.datasource.driverClassName = com.mysql.jdbc.Driver

komet.jpa.properties.hibernate.ddl-auto = validate

# Username and password
komet.datasource.username = root
komet.datasource.password =

# Show or not log for each sql query
komet.jpa.show-sql = false

# Keep the connection alive if idle for a long time (needed in production)
komet.datasource.testWhileIdle = true
komet.datasource.validationQuery = SELECT 1

komet.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# ===============================
# = OTHER CONFIGS
# ===============================

# Set the different traversal-options for the caching of the competences

# The amount of steps the algorithm will take (max)
crac.traversal.steps = 5

# The minimum of similarity between two competences for the algorithm to continue
crac.traversal.minSimilarity = 0.2

# Configuration of log4-logger (needed for Elasticsearch)
org.apache.logging.log4j.simplelog.StatusLogger.level = TRACE

# Set the file size limit (default 1Mb). If you want to specify that files be 
# unlimited set the multipart.maxFileSize property to -1.
multipart.maxFileSize = 1Mb

# Set the total request size for a multipart/form-data (default 10Mb)
multipart.maxRequestSize = 10Mb
multipart.location = 

# Define the settings of the conntection to Elasticsearch, as well as the threshold of its search results
crac.elastic.url = localhost
crac.elastic.port = 9300
crac.elastic.index = crac_core
crac.elastic.threshold = 0.05

# Define the package-paths to the different kinds of filters that are available in the system
crac.filters.individual = crac.module.utility.filter.individual
crac.filters.prematching = crac.module.matching.filter.prematching
crac.filters.matching = crac.module.matching.filter.matching
crac.filters.postmatching = crac.module.matching.filter.postmatching

# Turn the different system-outputs of components on or off
crac.print.synchronization.competences = false

# Set the directory for tree tagger
crac.nlp.taggerDirectory =  /opt/tree-tagger
